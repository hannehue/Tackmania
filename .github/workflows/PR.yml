# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: PR
on:
  pull_request:
    branches: [ "main" ]

jobs:
  build-frontend:
    name: "Build and test frontend"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build
      run: go build
      working-directory: frontend

    - name: Test
      run: go test
      working-directory: frontend

  build-backend:
    name: "Build and test backend"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build
      run: go build
      working-directory: backend

    - name: Test
      run: go test
      working-directory: backend
      
  Linting:
    name: "Linting"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: run linting
        uses: super-linter/super-linter/slim@v5 
        env:
          DEFAULT_BRANCH: ${{ github.event.pull_request.base.ref }}
          FILTER_REGEX_EXCLUDE: .*.md
          # To report GitHub Actions status checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  SecurityScann:
    name: "trivy scan"
    runs-on: ubuntu-latest 
    steps:
      - uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          severity: CRITICAL
          exit-code: '1'
