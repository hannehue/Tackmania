
name: Build and Deploy
on:
    push:
        branches: [ "main" ]

    # Allows manual triggering of the workflow
    workflow_dispatch: 

env:
    docker_username: "hannehue" #Hardcoded for clarity of which docker-account we're using.
    docker_password: ${{ secrets.GITHUB_TOKEN }}

jobs:
    build_backend_docker:
        name: "Build and push backend docker"
        runs-on: ubuntu-latest
        permissions:
            packages: write

        steps:
            -   uses: actions/checkout@v4
                with:
                    sparse-checkout: backend # Fetches only the backend folder
            -   name: Login to Docker Hub
                uses: docker/login-action@v3
                with:
                    registry: ghcr.io
                    username: ${{ env.docker_username }}
                    password: ${{ secrets.PACKAGE_TOKEN }}

            -   name: Build backend
                run: docker build -t ghcr.io/${{ env.docker_username }}/trackmania-backend:${{ github.sha }} .
                working-directory: backend

            -   name: Push backend
                run: docker push ghcr.io/${{ env.docker_username }}/trackmania-backend:${{ github.sha }}

    build_frontend_docker:
        name: "Build and push frontend docker"
        runs-on: ubuntu-latest
        permissions:
            packages: write

        steps:
            -   uses: actions/checkout@v4
                with:
                    sparse-checkout: frontend

            -   name: Login to Docker Hub
                uses: docker/login-action@v3
                with:
                    registry: ghcr.io
                    username: ${{ env.docker_username }}
                    password: ${{ secrets.PACKAGE_TOKEN }}

            -   name: Build frontend
                run: docker build -t ghcr.io/${{ env.docker_username }}/trackmania-frontend:${{ github.sha }} .
                working-directory: frontend

            -   name: Push frontend
                run: docker push ghcr.io/${{ env.docker_username }}/trackmania-frontend:${{ github.sha }}

    integration_tests:
        name: "Run integration tests"
        runs-on: ubuntu-latest
        needs: [ build_backend_docker, build_frontend_docker ]
        steps:
            -   uses: actions/checkout@v4
                with:
                    sparse-checkout: integration-tests
            
            -   name: Run integration tests
                run: bash run_tests.sh
                working-directory: integration-tests
                env:
                    SHA_TO_TEST: ${{ github.sha }}

    deploy_to_staging:
        needs: [integration_tests]
        name: "Deploy images to kubernetes"
        runs-on: ubuntu-latest
        permissions:
            packages: read
        
        steps:
            -   name: "Pull kubeconfig"
                run: |
                    echo "${{secrets.STAGING_KUBECONFIG}}" >> config
            -   name: "Deploy frontend"
                run: kubectl --kubeconfig config set image deployment trackmania-frontend trackmania-frontend=ghcr.io/hannehue/trackmania-frontend:${{github.sha}}
            -   name: "Deploy backend"
                run: kubectl --kubeconfig config set image deployment trackmania-backend trackmania-backend=ghcr.io/hannehue/trackmania-backend:${{github.sha}}


    deploy_to_production:
        needs: [deploy_to_staging]
        name: "Deploy images to kubernetes"
        runs-on: ubuntu-latest
        environment: Production 
        permissions:
            packages: read
        
        steps:
            -   name: "Pull kubeconfig"
                run: |
                    echo "${{secrets.PROD_KUBECONFIG}}" >> config
            -   name: "Deploy frontend"
                run: kubectl --kubeconfig config set image deployment trackmania-frontend trackmania-frontend=ghcr.io/hannehue/trackmania-frontend:${{github.sha}}
            -   name: "Deploy backend"
                run: kubectl --kubeconfig config set image deployment trackmania-backend trackmania-backend=ghcr.io/hannehue/trackmania-backend:${{github.sha}}